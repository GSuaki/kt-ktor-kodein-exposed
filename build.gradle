buildscript {
    repositories {
        jcenter()
    }

    dependencies {
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

apply plugin: 'kotlin'
apply plugin: 'kotlin-kapt'
apply plugin: 'application'

group 'com.gsuaki.invoices'
version '0.0.1'
mainClassName = "io.ktor.server.cio.EngineMain"

repositories {
    mavenLocal()
    jcenter()
    maven { url 'https://kotlin.bintray.com/ktor' }
}

tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}

dependencies {
    implementation "ch.qos.logback:logback-classic:$logback_version"

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jsr310_version"

    // Ktor
    implementation "io.ktor:ktor-server-cio:$ktor_version"
    implementation "io.ktor:ktor-server-core:$ktor_version"
    implementation "io.ktor:ktor-server-netty:$ktor_version"
    implementation "io.ktor:ktor-jackson:$ktor_version"

    // Kodain
    implementation "org.kodein.di:kodein-di:$kodein_version"
    implementation "org.kodein.di:kodein-di-framework-ktor-server-jvm:$kodein_version"
    implementation "org.kodein.di:kodein-di-jxinject-jvm:$kodein_version"

    // Arrow Kt
    implementation platform("io.arrow-kt:arrow-stack:$arrow_version")

    implementation "io.arrow-kt:arrow-core"
    implementation "io.arrow-kt:arrow-fx-coroutines"
    implementation "io.arrow-kt:arrow-optics"

    kapt "io.arrow-kt:arrow-meta:$arrow_version"

    // Database
    implementation "com.zaxxer:HikariCP:$hikari_version"

    implementation "mysql:mysql-connector-java:$mysql_version"

    implementation "org.jetbrains.exposed:exposed:$exposed_version"
    implementation "org.jetbrains.exposed:exposed-java-time:$exposed_time_version"

    // Tests
    testImplementation "io.ktor:ktor-server-tests:$ktor_version"

    testImplementation "org.junit.jupiter:junit-jupiter-api:$jupiter_version"
    testImplementation "org.junit.jupiter:junit-jupiter-params:$jupiter_version"

    // Tests Database
    testImplementation "org.testcontainers:testcontainers:$testcontainers_version"
    testImplementation "org.testcontainers:mysql:$testcontainers_version"
    testImplementation "org.testcontainers:junit-jupiter:$testcontainers_version"

    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$jupiter_version"
}

test {
    useJUnitPlatform()
}